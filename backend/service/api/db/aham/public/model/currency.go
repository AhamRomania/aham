//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package model

import "errors"

type Currency string

const (
	Currency_Lei Currency = "LEI"
	Currency_Eur Currency = "EUR"
	Currency_Usd Currency = "USD"
)

var CurrencyAllValues = []Currency{
	Currency_Lei,
	Currency_Eur,
	Currency_Usd,
}

func (e *Currency) Scan(value interface{}) error {
	var enumValue string
	switch val := value.(type) {
	case string:
		enumValue = val
	case []byte:
		enumValue = string(val)
	default:
		return errors.New("jet: Invalid scan value for AllTypesEnum enum. Enum value has to be of type string or []byte")
	}

	switch enumValue {
	case "LEI":
		*e = Currency_Lei
	case "EUR":
		*e = Currency_Eur
	case "USD":
		*e = Currency_Usd
	default:
		return errors.New("jet: Invalid scan value '" + enumValue + "' for Currency enum")
	}

	return nil
}

func (e Currency) String() string {
	return string(e)
}
