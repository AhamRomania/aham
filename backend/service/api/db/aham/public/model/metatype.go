//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package model

import "errors"

type Metatype string

const (
	Metatype_Text   Metatype = "TEXT"
	Metatype_Number Metatype = "NUMBER"
	Metatype_Select Metatype = "SELECT"
	Metatype_Bool   Metatype = "BOOL"
	Metatype_Date   Metatype = "DATE"
	Metatype_Time   Metatype = "TIME"
)

var MetatypeAllValues = []Metatype{
	Metatype_Text,
	Metatype_Number,
	Metatype_Select,
	Metatype_Bool,
	Metatype_Date,
	Metatype_Time,
}

func (e *Metatype) Scan(value interface{}) error {
	var enumValue string
	switch val := value.(type) {
	case string:
		enumValue = val
	case []byte:
		enumValue = string(val)
	default:
		return errors.New("jet: Invalid scan value for AllTypesEnum enum. Enum value has to be of type string or []byte")
	}

	switch enumValue {
	case "TEXT":
		*e = Metatype_Text
	case "NUMBER":
		*e = Metatype_Number
	case "SELECT":
		*e = Metatype_Select
	case "BOOL":
		*e = Metatype_Bool
	case "DATE":
		*e = Metatype_Date
	case "TIME":
		*e = Metatype_Time
	default:
		return errors.New("jet: Invalid scan value '" + enumValue + "' for Metatype enum")
	}

	return nil
}

func (e Metatype) String() string {
	return string(e)
}
