//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var Favourites = newFavouritesTable("public", "favourites", "")

type favouritesTable struct {
	postgres.Table

	// Columns
	ID        postgres.ColumnInteger
	UserID    postgres.ColumnInteger
	AdID      postgres.ColumnInteger
	CreatedAt postgres.ColumnTimestamp

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type FavouritesTable struct {
	favouritesTable

	EXCLUDED favouritesTable
}

// AS creates new FavouritesTable with assigned alias
func (a FavouritesTable) AS(alias string) *FavouritesTable {
	return newFavouritesTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new FavouritesTable with assigned schema name
func (a FavouritesTable) FromSchema(schemaName string) *FavouritesTable {
	return newFavouritesTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new FavouritesTable with assigned table prefix
func (a FavouritesTable) WithPrefix(prefix string) *FavouritesTable {
	return newFavouritesTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new FavouritesTable with assigned table suffix
func (a FavouritesTable) WithSuffix(suffix string) *FavouritesTable {
	return newFavouritesTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newFavouritesTable(schemaName, tableName, alias string) *FavouritesTable {
	return &FavouritesTable{
		favouritesTable: newFavouritesTableImpl(schemaName, tableName, alias),
		EXCLUDED:        newFavouritesTableImpl("", "excluded", ""),
	}
}

func newFavouritesTableImpl(schemaName, tableName, alias string) favouritesTable {
	var (
		IDColumn        = postgres.IntegerColumn("id")
		UserIDColumn    = postgres.IntegerColumn("user_id")
		AdIDColumn      = postgres.IntegerColumn("ad_id")
		CreatedAtColumn = postgres.TimestampColumn("created_at")
		allColumns      = postgres.ColumnList{IDColumn, UserIDColumn, AdIDColumn, CreatedAtColumn}
		mutableColumns  = postgres.ColumnList{UserIDColumn, AdIDColumn, CreatedAtColumn}
	)

	return favouritesTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:        IDColumn,
		UserID:    UserIDColumn,
		AdID:      AdIDColumn,
		CreatedAt: CreatedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
